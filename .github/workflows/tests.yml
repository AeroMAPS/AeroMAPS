name: tests

on:
  workflow_dispatch:
  workflow_call:
  push:
    branches:
      - '**'
    tags-ignore:
      - '**'

jobs:
  tests:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: [ '3.9', '3.10', '3.11', '3.12' ]
        os: [ ubuntu-latest, windows-latest, macos-latest ]

    steps:
      - uses: actions/checkout@v3

      # If macos increase the max number of semaphores
      - name: Set sysctl for macOS
        if: matrix.os == 'macos-latest'
        run: |
          sudo sysctl -w kern.posix.sem.max=20000


      - name: Install poetry
        run: pipx install poetry==${{ vars.POETRY_VERSION }}

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'poetry'
      - name: Activate environment and install dependencies
        run: |
          poetry env use ${{ matrix.python-version }}
          poetry install

      - name: Notebook tests
        run: |
          for notebook in $(find aeromaps -name "*.ipynb" \
            ! -path "aeromaps/notebooks/publications/icas_2024/examples_life_cycle_assessment-icas.ipynb" \
            ! -path "aeromaps/notebooks/publications/tsas_2025/examples_life_cycle_assessment-tsas.ipynb" \
          ! -path "aeromaps/notebooks/private/*"); do
            echo "Running tests for $notebook"
            start_time=$(date +%s)
            poetry run pytest --no-cov --nbval-lax -p no:python "$notebook" -s
            end_time=$(date +%s)
            echo "Tests for $notebook completed in $((end_time - start_time)) seconds."
          done
        shell: bash