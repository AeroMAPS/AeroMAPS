name: watchdog-tests

on:
  workflow_dispatch:
  workflow_call:
  pull_request:
    # The branches below must be a subset of the branches above
    branches: [ 'main' ]
  schedule:
    - cron: '0 4 * * 1'   # Monday 06:00 (UTC+2)

jobs:
  tests:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: [ '3.9', '3.10', '3.11', '3.12' ]
        os: [ ubuntu-latest, windows-latest, macos-latest ]

    steps:
      - uses: actions/checkout@v3

      # If macos increase the max number of semaphores
      - name: Set sysctl for macOS
        if: matrix.os == 'macos-latest'
        run: |
          sudo sysctl -w kern.posix.sem.max=30000
          
      - name: Install poetry
        run: pipx install poetry==${{ vars.POETRY_VERSION }}

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'poetry'

      - name: Install latest version of dependencies
        run: |
          poetry env use ${{ matrix.python-version }}
          poetry update
          poetry install

      - name: Notebook tests
        run: |
          # Find all notebooks to test, excluding specified paths
          notebooks=$(find aeromaps -name "*.ipynb" \
            ! -path "aeromaps/notebooks/publications/icas_2024/examples_life_cycle_assessment-icas.ipynb" \
            ! -path "aeromaps/notebooks/publications/tsas_2025/examples_life_cycle_assessment-tsas.ipynb" \
            ! -path "aeromaps/notebooks/publications/tsas_2025/examples_tsas_optim.ipynb" \
            ! -path "aeromaps/notebooks/publications/optimisation/*" \
            ! -path "aeromaps/notebooks/private/*")

          # Run pytest with nbmake on all notebooks in parallel
          poetry run pytest --no-cov --nbmake -p no:python -n=auto $notebooks -s
        shell: bash
