name: watchdog-tests

on:
  workflow_dispatch:
  workflow_call:
  push:
    branches: [ 'main', 'main-v*' ]
  pull_request:
    # The branches below must be a subset of the branches above
    branches: [ 'main', 'main-v*' ]
  schedule:
    - cron: '00 4 * * *'

jobs:
  tests:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: [ '3.11' ]
        os: [ ubuntu-latest, windows-latest ]

    steps:
      - uses: actions/checkout@v3

      - name: Install poetry
        run: pipx install poetry==${{ vars.POETRY_VERSION }}

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'poetry'

      - name: Install latest version of dependencies
        run: |
          poetry env use ${{ matrix.python-version }}
          poetry update
          poetry install

      - name: Notebook tests
        run: poetry run pytest --no-cov --nbval-lax -p no:python aeromaps --ignore=aeromaps/notebooks/examples_life_cycle_assessment.ipynb --ignore=aeromaps/notebooks/examples_life_cycle_assessment-tsas.ipynb --ignore=aeromaps/notebooks/examples_life_cycle_assessment-xarray.ipynb
        shell: bash