name: Computation Time Monitoring

on:
  workflow_dispatch:
  pull_request:
    branches: [main]
  push:
    branches:
      - '**'

jobs:
  speed-monitor:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: [ '3.11' ]

    steps:
      - name: Set notebook list
        run: |
            echo "NOTEBOOKS<<EOF" >> $GITHUB_ENV
            echo "aeromaps/notebooks/tutorials/run_a_basic_calculation/examples_basic.ipynb" >> $GITHUB_ENV
            echo "aeromaps/notebooks/tutorials/use_the_fleet_model/examples_fleet.ipynb" >> $GITHUB_ENV
            echo "aeromaps/notebooks/publications/joas_2023/examples_joas_application.ipynb" >> $GITHUB_ENV
            echo "aeromaps/notebooks/publications/macc/examples_macc_application.ipynb" >> $GITHUB_ENV
            echo "aeromaps/notebooks/publications/tsas_2025/examples_tsas_application.ipynb" >> $GITHUB_ENV
            echo "EOF" >> $GITHUB_ENV

      - name: Checkout current branch
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        run: pipx install poetry

      - name: Install dependencies
        run: |
          poetry env use ${{ matrix.python-version }}
          poetry install

      - name: Save current branch name
        id: branch
        run: echo "BRANCH_NAME=$(git rev-parse --abbrev-ref HEAD)" >> $GITHUB_ENV

      - name: Run notebooks on current branch
        run: |
          mkdir -p /tmp/timings
          for nb in $NOTEBOOKS; do
            echo "Timing $nb on $BRANCH_NAME"
            start=$(date +%s)
            poetry run pytest --no-cov --nbval-lax -p no:python "$nb"
            end=$(date +%s)
            echo "$((end - start))" > /tmp/timings/$(basename $nb).$BRANCH_NAME.time
          done

      - name: Stash notebook changes
        run: git stash push -u -m "Stash before switching branches"

      - name: Checkout main branch
        run: |
          git fetch origin main:main
          git checkout main

      - name: Install dependencies (main)
        run: |
          poetry env use ${{ matrix.python-version }}
          poetry install

      - name: Run notebooks on main branch
        run: |
          mkdir -p /tmp/timings
          for nb in $NOTEBOOKS; do
            echo "Timing $nb on main"
            start=$(date +%s)
            poetry run pytest --no-cov --nbval-lax -p no:python "$nb"
            end=$(date +%s)
            echo "$((end - start))" > /tmp/timings/$(basename $nb).main.time
          done

      - name: Compare timings
        run: |
          echo "Notebook timing comparison:"
          {
            echo "| Notebook | main (s) | $BRANCH_NAME (s) | diff (s) | diff (%) |"
            echo "|----------|----------|----------------|----------|----------|"
            for nb in $NOTEBOOKS; do
              base=$(basename $nb)
              t_main=$(cat /tmp/timings/$base.main.time)
              t_branch=$(cat /tmp/timings/$base.$BRANCH_NAME.time)
              diff=$((t_branch-t_main))
              # Calculate percent difference (avoid division by zero)
              if [ "$t_main" -eq 0 ]; then
                percent=0
              else
                percent=$(awk -v t_main="$t_main" -v t_branch="$t_branch" 'BEGIN { printf "%.2f", (t_branch-t_main)/t_main*100 }')
              fi
              echo "| $base | $t_main | $t_branch | $diff | $percent |"
            done
          } | tee -a $GITHUB_STEP_SUMMARY

      - name: Stash notebook changes (main)
        run: git stash push -u -m "Stash main branch notebook changes"

      - name: Restore branch
        if: always()
        run: |
          git checkout $BRANCH_NAME
          git stash pop || true